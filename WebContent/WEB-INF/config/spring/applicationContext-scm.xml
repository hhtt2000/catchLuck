<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
                             http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                             http://www.springframework.org/schema/context 
                             http://www.springframework.org/schema/context/spring-context-3.1.xsd                             
                             http://www.springframework.org/schema/mvc
                             http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                             http://www.springframework.org/schema/aop
                             http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                             http://www.springframework.org/schema/util
                             http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- RESTful URL Configuration -->
	<mvc:default-servlet-handler />	
    
    <!-- //Spring AOP annotation setting -->
	<aop:aspectj-autoproxy />

	<mvc:annotation-driven />
	<!--  mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="com.l1j5.web.common.extend.resolvers.VSHandlerMappingArgumentResolver"/>
		</mvc:argument-resolvers>
	</mvc:annotation-driven -->
                      
    <!-- annotation config -->
    <context:annotation-config />
	<!-- aop @Configurable -->
    <context:spring-configured />
    <context:load-time-weaver aspectj-weaving="on" />
    
	<context:component-scan base-package="com.l1j5">
	</context:component-scan>

	<!-- Bueayhub system properties -->
	<util:properties id="l1j5Prop" location="/WEB-INF/config/l1j5.properties"/>
	
<!-- 
	<bean class="com.l1j5.web.common.extend.advisors.ControllerAdvisor"/> 
-->
	
<!-- 
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
<property name="messageConverters">
  <list>
    <ref bean="jacksonMessageConverter"/>
  </list>
</property>
</bean>
 -->
	<!-- Validation
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="messageInterpolator">
			<bean class="com.l1j5.web.common.extend.interpolators.MessageSourceInterpolator" />
		</property>
	</bean>
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	 -->
	<!-- Internationalization(i18n) & Localization(L10n) -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">   
		<property name="basename" value="classpath:messages" />   
		<property name="defaultEncoding" value="UTF-8"/>   
	</bean>  
	
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">   
		<property name="paramName" value="lang" />   
	</bean>   
	   
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">   
		<property name="defaultLocale" value="ko"/>   
	</bean>

	<mvc:interceptors> 
	    <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor"> 
	        <property name="cacheSeconds" value="0" /> 
	        <property name="useExpiresHeader" value="true" /> 
	        <property name="useCacheControlHeader" value="true" /> 
	        <property name="useCacheControlNoStore" value="true" /> 
	    </bean>
	    <ref bean="localeChangeInterceptor" />
	</mvc:interceptors> 
	
	<!-- handler mapping >
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >
		<property name="interceptors">
			<list>
				<ref bean="localeChangeInterceptor" />
			</list>
		</property>
	</bean-->
	
	<!-- view name tanslator -->
	<bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />
	
	<!-- view resolver -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="atom" value="application/atom+xml" />
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" /> <!--application/json 이 들어오면 json형식으로 돌려준다.  --> 
			</map>
		</property>

		<property name="ignoreAcceptHeader" value="false" />
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			    	<property name="prefix" value="/WEB-INF/view/"/>
			        <property name="suffix" value=".jsp"/>
			    </bean>
							
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="prefixJson" value="false" />
					<property name="contentType" value="application/json; charset=UTF-8" />
				</bean>
			</list>
		</property>
	</bean>

	<!--
	This bean sets up the Velocity environment for us based on a root path for templates.
	Optionally, a properties file can be specified for more control over the Velocity
	environment, but the defaults are pretty sane for file based template loading.
	-->
	<!-- 
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/" />
		<property name="configLocation" value="/WEB-INF/config/velocity/velocity.properties" />
	</bean>
	 -->
	<!-- fileupload for Servlet 3.0 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />

	<!-- fileuploadHelper -->
	<bean id="fileUploadHelper" class="com.l1j5.web.common.utils.FileUploadHelper" scope="application" />
	
	<!-- bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="mappedHandlers">
			<props>
				<prop key="DuplicateKeyException">error/duplicateKey</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="error/default"/>
		<property name="order" value="1"/>
	</bean-->

	<bean class="com.l1j5.web.common.extend.resolvers.MethodArgumentNotValidExceptionResolver">
	    <property name="order" value="0"/>
	</bean>

	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <property name="host" value="#{l1j5Prop['mail.host']}"/>
	    <property name="username" value="#{l1j5Prop['mail.username']}"/>
	    <property name="password" value="#{l1j5Prop['mail.password']}"/>
	    <property name="port" value="#{l1j5Prop['mail.port']}"/>
	    <property name="protocol" value="#{l1j5Prop['mail.protocol']}" />
	    <property name="javaMailProperties">
	        <props>
		        <prop key="mail.smtps.auth">#{l1j5Prop['mail.true']}</prop>
	            <prop key="mail.smtp.ssl.enable">#{l1j5Prop['mail.true']}</prop>
	            <prop key="mail.transport.protocol">#{l1j5Prop['mail.true']}</prop>
	        </props>
	    </property>
	</bean>
	
	
</beans>

